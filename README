
MY MAGNIFICENT GADGETS
======================
This application was built to assist Dr. J. Mongrel Faceputty with the 
organization of a number of (magnificient) gadgets that he'd built.

It's not terribly full-featured, as right now he's only able to view the 
gadgets that he's built, and specifics of each gadget, not add or remove any of 
the gadgets that he's got.

Before that functionality is added, though, he really wants to be able to add 
"parts" to his existing gadgets, so that he can figure out which maniacal bits 
he's put where, and what he's got left.

Your job here is to add that functionality.  Take a look at the gadget_detail 
feature in the features directory.  The first three scenarios are passing, but 
the fourth one (tagged @todo) is not yet fully functional.

Two of its steps have already been implemented, but you'll have to implement 
both the examples (tests) and the underlying code to make those two steps pass, 
and ultimately allow Dr. Faceputty to add parts to his precious gadgets.

Ideally the UI for parts management should be done entirely within the detail 
page for each gadget.  Remember to implement only as much code as is necessary 
to get your steps to pass, while simultaneously ensuring that the verbiage in 
you steps holds true in the practical functionality of the application 
(entering true in each step definition, for example, will get the steps to 
pass, but is ultimately not testing anything at all...)

HINT: Nested routes may be useful here.
